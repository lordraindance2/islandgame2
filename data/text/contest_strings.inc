gText_AppealNumWhichMoveWillBePlayed::
	.string "Appeal no. {STR_VAR_1}!\n"
	.string "Which move will be played?$"

gText_AppealNumButItCantParticipate::
	.string "Appeal no. {STR_VAR_1}!\n"
	.string "But it can't participate!$"

gText_MonAppealedWithMove::
	.string "{STR_VAR_1} appealed with\n"
	.string "{STR_VAR_2}!$"

gText_MonWasWatchingOthers::
	.string "{STR_VAR_1} was watching\n"
	.string "the others.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_AllOutOfAppealTime::
	.string "We're all out of\n"
	.string "Appeal Time!{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

@ Appeal result texts

gText_BecameMoreConsciousOfOtherMons::
	.string "It became more conscious\n"
	.string "of the other POKéMON.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonCantMakeAnAppealAfterThis::
	.string "{STR_VAR_1} can't make an\n"
	.string "appeal after this.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_SettledDownJustLittleBit::
	.string "It settled down just a\n"
	.string "little bit.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_BecameObliviousToOtherMons::
	.string "It became oblivious to\n"
	.string "the other POKéMON.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_BecameLessAwareOfOtherMons::
	.string "It became less aware of\n"
	.string "the other POKéMON.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_StoppedCaringAboutOtherMons::
	.string "It stopped caring about\n"
	.string "other POKéMON much.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_TriedToStartleOtherMons::
	.string "It tried to startle the\n"
	.string "other POKéMON.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_TriedToDazzleOthers::
	.string "It tried to dazzle the\n"
	.string "others.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_JudgeLookedAwayFromMon::
	.string "The JUDGE looked away\n"
	.string "from {STR_VAR_1}.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_TriedToUnnerveNextMon::
	.string "It tried to unnerve the\n"
	.string "next POKéMON.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonBecameNervous::
	.string "{STR_VAR_1} became\n"
	.string "nervous.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_AppealTriedToUnnerveWaitingMons::
	.string "The appeal tried to\n"
	.string "unnerve waiting POKéMON.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_TauntedMonsDoingWell::
	.string "It taunted POKéMON\n"
	.string "doing well.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonRegainedItsForm::
	.string "{STR_VAR_1} regained its\n"
	.string "form.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_TriedToJamMonDoingWell::
	.string "It tried to jam POKéMON\n"
	.string "doing well.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_StandoutMonHustledEvenMore::
	.string "The standout {STR_VAR_1}\n"
	.string "hustled even more.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_LargelyUnnoticedMonWorkedHard::
	.string "The largely unnoticed\n"
	.string "{STR_VAR_1} worked hard.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_WorkedAsMuchAsMonBefore::
	.string "It worked as much as\n"
	.string "POKéMON before it.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonsAppealDidNotGoWell::
	.string "{STR_VAR_1}'s appeal did\n"
	.string "not go well.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_WorkedAsMuchAsPrecedingMon::
	.string "It worked as much as the\n"
	.string "preceding POKéMON.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonsAppealDidNotGoWell2::
	.string "{STR_VAR_1}'s appeal did\n"
	.string "not go well.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonsAppealDidNotGoWell3::
	.string "{STR_VAR_1}'s appeal did\n"
	.string "not go well.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonsAppealWentSlightlyWell::
	.string "{STR_VAR_1}'s appeal\n"
	.string "went slightly well.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonsAppealWentPrettyWell::
	.string "{STR_VAR_1}'s appeal\n"
	.string "went pretty well.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonsAppealWentExcellently::
	.string "{STR_VAR_1}'s appeal\n"
	.string "went excellently.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonsAppealWasDud::
	.string "{STR_VAR_1}'s appeal was\n"
	.string "a dud.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonsAppealDidNotWorkVeryWell::
	.string "{STR_VAR_1}'s appeal did\n"
	.string "not work very well.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonsAppealWentSlightlyWell2::
	.string "{STR_VAR_1}'s appeal\n"
	.string "went slightly well.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonsAppealWentPrettyWell2::
	.string "{STR_VAR_1}'s appeal\n"
	.string "went pretty well.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonsAppealWentVeryWell::
	.string "{STR_VAR_1}'s appeal\n"
	.string "went very well.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonsAppealWentExcellently2::
	.string "{STR_VAR_1}'s appeal\n"
	.string "went excellently.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_SameTypeAsOneBeforeGood::
	.string "It's the same type as the\n"
	.string "POKéMON before--good!{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_NotSameTypeAsOneBeforeGood::
	.string "It's not the same type as\n"
	.string "the one before--good!{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_StoodOutMuchMoreThanMonBefore::
	.string "It stood out much more\n"
	.string "than the POKéMON before.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_DidntDoAsWellAsMonBefore::
	.string "It didn't do as well as the\n"
	.string "POKéMON before.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonsConditionRoseAboveUsual::
	.string "{STR_VAR_1}'s condition\n"
	.string "rose above usual.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MonsHotStatusMadeGreatAppeal::
	.string "{STR_VAR_1}'s hot status\n"
	.string "made it a great appeal!{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MovedUpInLineForNextAppeal::
	.string "It moved up in line for\n"
	.string "the next appeal.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_MovedBackInLineForNextAppeal::
	.string "It moved back in line once\n"
	.string "for the next appeal.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_ScrambledUpOrderForNextTurn::
	.string "It scrambled up the\n"
	.string "order for the next turn.{PAUSE 15}{PAUSE 15}{PAUSE 15}{PAUSE 15}$"

gText_JudgeLookedAtMonExpectantly::
	.string "The JUDGE looked at\n"
	.string "{STR_VAR_1} expectantly.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_AppealComboWentOverWell::
	.string "The appeal combo went\n"
	.string "over well.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_AppealComboWentOverVeryWell::
	.string "The appeal combo went\n"
	.string "over very well.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_AppealComboWentOverExcellently::
	.string "The appeal combo went\n"
	.string "over excellently.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_MonManagedToAvertGaze::
	.string "{STR_VAR_1} managed to\n"
	.string "avert its gaze.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_MonManagedToAvoidSeeingIt::
	.string "{STR_VAR_1} managed to\n"
	.string "avoid seeing it.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_MonIsntFazedByThatSortOfThing::
	.string "{STR_VAR_1} isn't fazed\n"
	.string "by that sort of thing.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_MonBecameALittleDistracted::
	.string "{STR_VAR_1} became a\n"
	.string "little distracted.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_TriedToStartleOtherPokemon::
	.string "It tried to startle the\n"
	.string "other POKéMON.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_MonLookedDownOutOfDistraction::
	.string "{STR_VAR_1} looked down\n"
	.string "out of distraction.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_MonTurnedBackOutOfDistraction::
	.string "{STR_VAR_1} turned back\n"
	.string "out of distraction.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_MonCouldntHelpUtteringCry::
	.string "{STR_VAR_1} couldn't help\n"
	.string "uttering a cry.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_MonCouldntHelpLeapingUp::
	.string "{STR_VAR_1} couldn't help\n"
	.string "leaping up.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_MonTrippedOutOfDistraction::
	.string "{STR_VAR_1} tripped over\n"
	.string "out of distraction.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_MonWasTooNervousToMove::
	.string "{STR_VAR_1} was too\n"
	.string "nervous to move.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_ButItMessedUp2::
	.string "But it messed up.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_ButItFailedToMakeTargetNervous::
	.string "But it failed to make\n"
	.string "the target nervous.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_ButItFailedToMakeAnyoneNervous::
	.string "But it failed to make\n"
	.string "anyone nervous.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_ButItWasIgnored::
	.string "But it was ignored…{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_CouldntImproveItsCondition::
	.string "But it couldn't improve\n"
	.string "its condition…{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_BadConditionResultedInWeakAppeal::
	.string "Its bad condition\n"
	.string "resulted in a weak appeal.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_MonWasUnaffected::
	.string "{STR_VAR_1} was\n"
	.string "unaffected.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_RepeatedAppeal::
	.string "{STR_VAR_1} disappointed\n"
	.string "by repeating an appeal.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_MonsXWentOverGreat::
	.string "{STR_VAR_1}'s {STR_VAR_3}\n"
	.string "went over great.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_MonsXDidntGoOverWell::
	.string "{STR_VAR_1}'s {STR_VAR_3}\n"
	.string "didn't go over well here…{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_MonsXGotTheCrowdGoing::
	.string "{STR_VAR_1}'s {STR_VAR_3}\n"
	.string "got the crowd going.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_MonCantAppealNextTurn::
	.string "{STR_VAR_1} can't appeal\n"
	.string "next turn…{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_AttractedCrowdsAttention::
	.string "It attracted the crowd's\n"
	.string "attention.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_CrowdContinuesToWatchMon::
	.string "The crowd continues to\n"
	.string "watch {STR_VAR_3}.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_MonsMoveIsIgnored::
	.string "{STR_VAR_1}'s\n"
	.string "{STR_VAR_2} is ignored.{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}{PAUSE 0x0F}$"

gText_Contest_Shyness::
	.string "shyness$"

gText_Contest_Anxiety::
	.string "anxiety$"

gText_Contest_Laziness::
	.string "laziness$"

gText_Contest_Hesitancy::
	.string "hesitancy$"

gText_Contest_Fear::
	.string "fear$"

@ Strings for new Summary Screen

gText_FourLine_HighlyAppealingMove::
	.string "A highly appealing\nmove.$"

gText_FourLine_UserMoreEasilyStartled::
	.string "After this move,\nthe user is\nmore easily\nstartled.$"

gText_FourLine_GreatAppealButNoMoreToEnd::
	.string "Makes a great\nappeal, but\nallows no\nmore to the end.$"

gText_FourLine_UsedRepeatedlyWithoutBoringJudge::
	.string "Can be repeatedly\nused without\nboring the JUDGE.$"

gText_FourLine_AvoidStartledByOthersOnce::
	.string "Can avoid being\nstartled\nby others once.$"

gText_FourLine_AvoidStartledByOthers::
	.string "Can avoid being\nstartled\nby others.$"

gText_FourLine_AvoidStartledByOthersLittle::
	.string "Can avoid being\nstartled\nby others a little.$"

gText_FourLine_UserLessLikelyStartled::
	.string "After this move,\nthe user is less\nlikely to\nbe startled.$"

gText_FourLine_SlightlyStartleFrontMon::
	.string "Slightly startles\nthe POKéMON\nin front.$"

gText_FourLine_SlightlyStartleAppealed::
	.string "Slightly startles\nthose that have\nmade appeals.$"

gText_FourLine_StartleAppealedBeforeUser::
	.string "Startles the\nPOKéMON that\nappealed before\nthe user.$"

gText_FourLine_StartleAllAppealed::
	.string "Startles all\nPOKéMON that\nhave done\ntheir appeals.$"

gText_FourLine_BadlyStartleFrontMon::
	.string "Badly startles\nthe POKéMON\nin front.$"

gText_FourLine_BadlyStartleAppealed::
	.string "Badly startles\nthose that\nhave made appeals.$"

gText_FourLine_StartleAppealedBeforeUser2::
	.string "Startles the\nPOKéMON that\nappealed before\nthe user.$"

gText_FourLine_StartleAllAppealed2::
	.string "Startles all\nPOKéMON that\nhave done\ntheir appeals.$"

gText_FourLine_ShiftJudgesAttentionFromOthers::
	.string "Shifts the\nJUDGE's attention\nfrom others.$"

gText_FourLine_StartleMonHasJudgesAttention::
	.string "Startles the\nPOKéMON that\nhas the\nJUDGE's attention.$"

gText_FourLine_JamOthersMissesTurn::
	.string "Jams the others,\nand misses one\nturn of appeals.$"

gText_FourLine_StartleMonsMadeSameTypeAppeal::
	.string "Startles POKéMON\nthat made a\nsame-type appeal.$"

gText_FourLine_BadlyStartleCoolAppeals::
	.string "Badly startles\nPOKéMON\nthat made\nCOOL appeals.$"

gText_FourLine_BadlyStartleBeautyAppeals::
	.string "Badly startles\nPOKéMON\nthat made\nBEAUTY appeals.$"

gText_FourLine_BadlyStartleCuteAppeals::
	.string "Badly startles\nPOKéMON\nthat made\nCUTE appeals.$"

gText_FourLine_BadlyStartleSmartAppeals::
	.string "Badly startles\nPOKéMON\nthat made\nSMART appeals.$"

gText_FourLine_BadlyStartleToughAppeals::
	.string "Badly startles\nPOKéMON\nthat made\nTOUGH appeals.$"

gText_FourLine_MakeMonAfterUserNervous::
	.string "Makes one\nPOKéMON after\nthe user nervous.$"

gText_FourLine_MakeAllMonsAfterUserNervous::
	.string "Makes all\nPOKéMON after\nthe user nervous.$"

gText_FourLine_WorsenConditionOfThoseMadeAppeals::
	.string "Worsens the\ncondition of\nthose that\nmade appeals.$"

gText_FourLine_BadlyStartleMonsGoodCondition::
	.string "Badly startles\nPOKéMON in\ngood condition.$"

gText_FourLine_AppealGreatIfPerformedFirst::
	.string "The appeal works\ngreat if\nperformed first.$"

gText_FourLine_AppealGreatIfPerformedLast::
	.string "The appeal works\ngreat if\nperformed last.$"

gText_FourLine_AppealAsGoodAsThoseBeforeIt::
	.string "Makes the appeal\nas good as\nthose before it.$"

gText_FourLine_AppealAsGoodAsOneBeforeIt::
	.string "Makes the appeal\nas good as the\none before it.$"

gText_FourLine_AppealBetterLaterItsPerformed::
	.string "The appeal\nworks better\nthe later\nit is performed.$"

gText_FourLine_AppealVariesDependingOnTiming::
	.string "The appeal's\nquality varies\ndepending on\nits timing.$"

gText_FourLine_WorksWellIfSameTypeAsBefore::
	.string "Works well if\nit's the same\ntype as the\none before.$"

gText_FourLine_WorksWellIfDifferentTypeAsBefore::
	.string "Works well if\ndifferent in\ntype than the\none before.$"

gText_FourLine_AffectedByAppealInFront::
	.string "Affected by\nhow well the\nappeal in\nfront goes.$"

gText_FourLine_UpsConditionHelpsPreventNervousness::
	.string "Ups the\nuser's condition.\nHelps prevent\nnervousness.$"

gText_FourLine_AppealWorksWellIfConditionGood::
	.string "The appeal works\nwell if the\nuser's condition\nis good.$"

gText_FourLine_NextAppealMadeEarlier::
	.string "The next appeal\ncan be\nmade earlier\nnext turn.$"

gText_FourLine_NextAppealMadeLater::
	.string "The next appeal\ncan be\nmade later\nnext turn.$"

gText_FourLine_TurnOrderMoreEasilyScrambled::
	.string "Makes the next\nturn's order\nmore easily\nscrambled.$"

gText_FourLine_ScrambleOrderOfNextAppeals::
	.string "Scrambles the\norder of\nappeals on\nthe next turn.$"

gText_FourLine_AppealExcitesAudienceInAnyContest::
	.string "An appeal that\nexcites the\naudience in\nany CONTEST.$"

gText_FourLine_BadlyStartlesMonsGoodAppeals::
	.string "Badly startles\nall POKéMON\nthat made\ngood appeals.$"

gText_FourLine_AppealBestMoreCrowdExcited::
	.string "The appeal\nworks best the\nmore the crowd\nis excited.$"

gText_FourLine_TemporarilyStopCrowdExcited::
	.string "Temporarily\nstops the\ncrowd from\ngrowing excited.$"

@ Unused move names

gText_RainDance::
	.string "RAIN DANCE$"

gText_Rage::
	.string "RAGE$"

gText_FocusEnergy::
	.string "FOCUS ENERGY$"

gText_Hypnosis::
	.string "HYPNOSIS$"

gText_Softboiled::
	.string "SOFTBOILED$"

gText_HornAttack::
	.string "HORN ATTACK$"

gText_SwordsDance::
	.string "SWORDS DANCE$"

gText_Conversion::
	.string "CONVERSION$"

gText_SunnyDay::
	.string "SUNNY DAY$"

gText_Rest2::
	.string "REST$"

gText_Vicegrip::
	.string "VICEGRIP$"

gText_DefenseCurl::
	.string "DEFENSE CURL$"

gText_LockOn::
	.string "LOCK-ON$"
